# https://grafana.com/docs/loki/latest/clients/promtail/installation/#daemonset-recommended

---
apiVersion: v1
kind: Namespace
metadata:
  name: logging
---

--- # Daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail-daemonset
  namespace: logging
spec:
  selector:
    matchLabels:
      name: promtail
  template:
    metadata:
      labels:
        name: promtail
    spec:
      serviceAccountName: promtail-serviceaccount
      containers:
      - name: promtail-container
        image: grafana/promtail
        args:
        - -config.file=/etc/promtail/promtail.yaml
        env: 
        - name: 'HOSTNAME' # needed when using kubernetes_sd_configs
          valueFrom:
            fieldRef:
              fieldPath: 'spec.nodeName'
        volumeMounts:
        - name: logs
          mountPath: /var/log
        - name: promtail-config
          mountPath: /etc/promtail
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      volumes:
      - name: logs
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: promtail-config
        configMap:
          name: promtail-config
--- # configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: logging
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    clients:
    - url: http://loki.logging.svc.cluster.local:3100/loki/api/v1/push

    positions:
      filename: /tmp/positions.yaml
    target_config:
      sync_period: 10s
    scrape_configs:
    - job_name: pod-logs
      kubernetes_sd_configs:
        - role: pod
      pipeline_stages:
        - docker: {}
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_pod_node_name
          target_label: __host__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          replacement: $1
          separator: /
          source_labels:
            - __meta_kubernetes_namespace
            - __meta_kubernetes_pod_name
          target_label: job
        - action: replace
          source_labels:
            - __meta_kubernetes_namespace
          target_label: namespace
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_name
          target_label: pod
        - action: replace
          source_labels:
            - __meta_kubernetes_pod_container_name
          target_label: container
        - replacement: /var/log/pods/*$1/*.log
          separator: /
          source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
          target_label: __path__
---

--- # Clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail-clusterrole
  namespace: logging
rules:
  - apiGroups: [""]
    resources:
    - nodes
    - services
    - pods
    verbs:
    - get
    - watch
    - list
---

--- # ServiceAccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail-serviceaccount
  namespace: logging
---

--- # Rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail-clusterrolebinding
  namespace: logging
subjects:
    - kind: ServiceAccount
      name: promtail-serviceaccount
      namespace: logging
roleRef:
    kind: ClusterRole
    name: promtail-clusterrole
    apiGroup: rbac.authorization.k8s.io
---

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: promtail
#   namespace: logging
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: promtail
#   template:
#     metadata:
#       labels:
#         app: promtail
#     spec:
#       containers:
#         - name: promtail
#           image: grafana/promtail:2.6.1
#           args:
#             - "-config.file=/etc/promtail/config.yml"
#           ports:
#           - name: http
#             containerPort: 9080
#           volumeMounts:
#             - name: config-volume
#               mountPath: /etc/promtail
#             - name: varlog
#               mountPath: /var/log
#               readOnly: true
#       volumes:
#         - name: config-volume
#           configMap:
#             name: promtail-config
#         - name: varlog
#           hostPath:
#             path: /var/log
# ---

# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: promtail-config
#   namespace: logging
# data:
#   config.yml: |
#     server:
#       http_listen_port: 9080
#       grpc_listen_port: 0
#       log_level: info
#     positions:
#       filename: /tmp/positions.yaml
#     clients:
#       - url: http://loki.logging.svc.cluster.local:3100/loki/api/v1/push
#     scrape_configs:
#       - job_name: varlogs
#         static_configs:
#           - targets:
#               - localhost
#             labels:
#               job: varlogs
#               __path__: /var/log/*/*.log
# ---

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   namespace: logging
#   creationTimestamp: null
#   labels:
#     io.kompose.service: promtail-claim1
#   name: promtail-claim1
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 100Mi
# status: {}
# ---

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   namespace: logging
#   creationTimestamp: null
#   labels:
#     io.kompose.service: promtail-claim0
#   name: promtail-claim0
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 100Mi
# status: {}
# ---

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   namespace: logging
#   creationTimestamp: null
#   labels:
#     io.kompose.service: prom-data
#   name: prom-data
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 100Mi
# status: {}
# ---