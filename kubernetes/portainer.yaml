---
# Source: portainer/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: portainer
---
# Source: portainer/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: portainer-sa-clusteradmin
  namespace: portainer
  labels:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
    app.kubernetes.io/version: "ce-latest-ee-2.17.0"
---
# Source: portainer/templates/pvc.yaml
kind: "PersistentVolumeClaim"
apiVersion: "v1"
metadata:
  name: portainer
  namespace: portainer  
  annotations:
    volume.alpha.kubernetes.io/storage-class: "generic"
  labels:
    io.portainer.kubernetes.application.stack: portainer
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
    app.kubernetes.io/version: "ce-latest-ee-2.17.0"
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
---
# Source: portainer/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: portainer
  labels:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
    app.kubernetes.io/version: "ce-latest-ee-2.17.0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  namespace: portainer
  name: portainer-sa-clusteradmin
---
# Source: portainer/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: portainer
  namespace: portainer
  labels:
    io.portainer.kubernetes.application.stack: portainer
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
    app.kubernetes.io/version: "ce-latest-ee-2.17.0"
spec:
  type: NodePort
  ports:
    # - port: 9000
    #   targetPort: 9000
    #   protocol: TCP
    #   name: http
    #   nodePort: 30777
    - port: 9443
      targetPort: 9443
      protocol: TCP
      name: https
      nodePort: 30775
    # - port: 30776
    #   targetPort: 30776
    #   protocol: TCP
    #   name: edge
    #   nodePort: 30776
  selector:
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
---
# Source: portainer/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portainer
  namespace: portainer
  labels:
    io.portainer.kubernetes.application.stack: portainer
    app.kubernetes.io/name: portainer
    app.kubernetes.io/instance: portainer
    app.kubernetes.io/version: "ce-latest-ee-2.17.0"
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app.kubernetes.io/name: portainer
      app.kubernetes.io/instance: portainer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: portainer
        app.kubernetes.io/instance: portainer
    spec:
      nodeSelector:
        {}
      serviceAccountName: portainer-sa-clusteradmin
      volumes:
        - name: "data"
          persistentVolumeClaim:
            claimName: portainer
      containers:
        - name: portainer
          image: "portainer/portainer-ce:2.17.0"
          imagePullPolicy: Always
          args:
          - '--tunnel-port=30776'          
          volumeMounts:
            - name: data
              mountPath: /data              
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
            - name: https
              containerPort: 9443
              protocol: TCP              
            - name: tcp-edge
              containerPort: 8000
              protocol: TCP              
          livenessProbe:
            httpGet:
              path: /
              port: 9443
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /
              port: 9443
              scheme: HTTPS
          resources:
            {}


# ---
# # Source: portainer/templates/namespace.yaml
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: portainer
# ---
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   namespace: portainer
#   annotations:
#     kompose.cmd: ./kompose convert -f host/docker-compose.yml
#     kompose.version: 1.28.0 (c4137012e)
#   creationTimestamp: null
#   labels:
#     io.kompose.service: portainer
#   name: portainer
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       io.kompose.service: portainer
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       annotations:
#         kompose.cmd: ./kompose convert -f host/docker-compose.yml
#         kompose.version: 1.28.0 (c4137012e)
#       creationTimestamp: null
#       labels:
#         io.kompose.network/host-default: "true"
#         io.kompose.service: portainer
#     spec:
#       containers:
#         - image: portainer/portainer-ce:latest
#           name: portainer
#           ports:
#             - containerPort: 9443
#           resources: {}
#           volumeMounts:
#             - mountPath: /data
#               name: portainer-data
#             - mountPath: /var/run/docker.sock
#               name: portainer-claim1
#       restartPolicy: Always
#       volumes:
#         - name: portainer-data
#           persistentVolumeClaim:
#             claimName: portainer-data
#         - name: portainer-claim1
#           persistentVolumeClaim:
#             claimName: portainer-claim1
# status: {}
# ---

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   namespace: portainer
#   annotations:
#     kompose.cmd: ./kompose convert -f host/docker-compose.yml
#     kompose.version: 1.28.0 (c4137012e)
#   creationTimestamp: null
#   labels:
#     io.kompose.service: portainer
#   name: portainer
# spec:
#   type: NodePort
#   ports:
#     - name: "9443"
#       port: 9443
#       targetPort: 9443
#       nodePort: 30775
#   selector:
#     io.kompose.service: portainer
# status:
#   loadBalancer: {}
# ---

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   namespace: portainer
#   creationTimestamp: null
#   labels:
#     io.kompose.service: portainer-data
#   name: portainer-data
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 100Mi
# status: {}
# ---

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   namespace: portainer
#   creationTimestamp: null
#   labels:
#     io.kompose.service: portainer-claim1
#   name: portainer-claim1
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 100Mi
# status: {}
# ---