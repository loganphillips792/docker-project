---
apiVersion: v1
kind: Service
metadata:
  namespace: kubernetes-project
  annotations:
    kompose.cmd: ./kompose convert -f host/docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: heimdall
  name: heimdall
spec:
  type: NodePort
  ports:
    - name: "80"
      port: 80
      targetPort: 80
      nodePort: 30777
    - name: "443"
      port: 443
      targetPort: 443
  selector:
    io.kompose.service: heimdall
status:
  loadBalancer: {}
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heimdall-deployment
  namespace: kubernetes-project 
  annotations:
    kompose.cmd: ./kompose convert -f host/docker-compose.yml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: heimdall
 
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: heimdall
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert -f host/docker-compose.yml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/host-default: "true"
        io.kompose.service: heimdall
    spec:
      containers:
        - env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: Europe/London
          image: linuxserver/heimdall
          name: heimdall
          ports:
            - containerPort: 80
            - containerPort: 443
          resources: {}
          volumeMounts:
            - mountPath: /config
              name: heimdall-claim0
      restartPolicy: Always
      volumes:
        - name: heimdall-claim0
          persistentVolumeClaim:
            claimName: heimdall-claim0
status: {}
---

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: kubernetes-project   
  creationTimestamp: null
  labels:
    io.kompose.service: heimdall-claim0
  name: heimdall-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---